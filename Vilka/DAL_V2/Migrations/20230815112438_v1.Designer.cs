// <auto-generated />
using DAL_V2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL_V2.Migrations
{
    [DbContext(typeof(EntityDatabase))]
    [Migration("20230815112438_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL_V2.Entity.Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Cart");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ProductId = 2,
                            UserId = 1
                        },
                        new
                        {
                            ID = 2,
                            ProductId = 3,
                            UserId = 1
                        },
                        new
                        {
                            ID = 3,
                            ProductId = 4,
                            UserId = 2
                        },
                        new
                        {
                            ID = 7,
                            ProductId = 7,
                            UserId = 2
                        },
                        new
                        {
                            ID = 4,
                            ProductId = 5,
                            UserId = 1
                        },
                        new
                        {
                            ID = 5,
                            ProductId = 6,
                            UserId = 1
                        },
                        new
                        {
                            ID = 6,
                            ProductId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DAL_V2.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "https://cdn.samsungshop.com.ua/products/7699/cover/133269/SM-A346_Galaxy-A34-5G_Awesome-Graphite_Front2.png",
                            Name = "Smartphone"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "https://img.freepik.com/premium-vector/smiling-red-car-cartoon-white_29190-4845.jpg",
                            Name = "Car"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "https://etno-shop.ru/upload/iblock/d3a/s1200.jpg",
                            Name = "Kettle"
                        });
                });

            modelBuilder.Entity("DAL_V2.Entity.KeyParams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KeyWordsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KeyWordsId");

                    b.HasIndex("ProductId");

                    b.ToTable("KeyLink");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KeyWordsId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            KeyWordsId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            KeyWordsId = 3,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 4,
                            KeyWordsId = 4,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 5,
                            KeyWordsId = 5,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 6,
                            KeyWordsId = 6,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 7,
                            KeyWordsId = 7,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 8,
                            KeyWordsId = 8,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 9,
                            KeyWordsId = 9,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 10,
                            KeyWordsId = 10,
                            ProductId = 7
                        });
                });

            modelBuilder.Entity("DAL_V2.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ActionPrice")
                        .HasColumnType("float");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionField1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionField2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionPrice = 9500.0,
                            CategoryId = 1,
                            DescriptionField1 = "Modern phone. This item was designed in 2016",
                            DescriptionField2 = "It has 8 mp camera",
                            ImageUrl = "https://support.apple.com/library/APPLE/APPLECARE_ALLGEOS/SP726/SP726-iphone6s-gray-select-2015.png",
                            Name = "Iphone",
                            Price = 10000.0
                        },
                        new
                        {
                            Id = 2,
                            ActionPrice = 550000.0,
                            CategoryId = 1,
                            DescriptionField1 = "New Computer for all",
                            DescriptionField2 = "a lot of features",
                            ImageUrl = "https://ilounge.ua/files/articles/macbook-pro-2021-promo.jpg",
                            Name = "MacBook",
                            Price = 50000.0
                        },
                        new
                        {
                            Id = 3,
                            ActionPrice = 4500.0,
                            CategoryId = 2,
                            DescriptionField1 = "Very comfortable car for family",
                            DescriptionField2 = "5 doors",
                            ImageUrl = "https://i.infocar.ua/i/12/187/1400x936.jpg",
                            Name = "Opel Astra",
                            Price = 100000.0
                        },
                        new
                        {
                            Id = 4,
                            ActionPrice = 10000.0,
                            CategoryId = 2,
                            DescriptionField1 = "Big sedan for family",
                            DescriptionField2 = "have very strong engine",
                            ImageUrl = "https://cdn.motor1.com/images/mgl/JYjbJ/s1/4x3/2019-volkswagen-jetta-gli-live.webp",
                            Name = "Volkswagen Jetta",
                            Price = 15000.0
                        },
                        new
                        {
                            Id = 5,
                            ActionPrice = 1499.0,
                            CategoryId = 3,
                            DescriptionField1 = "Шкала рівня води\r\nЗі шкалою\r\nЗахист\r\nВимкнення при знятті з бази\r\nВід перегріву\r\nВід увімкнення без води",
                            DescriptionField2 = "Тип нагрівального елемента\r\nПрихований (диск)\r\nТип\r\nЗвичайний\r\n",
                            ImageUrl = "https://content.rozetka.com.ua/goods/images/big/18592642.jpg",
                            Name = "Електрочайник BOSCH",
                            Price = 1799.0
                        },
                        new
                        {
                            Id = 6,
                            ActionPrice = 12285.0,
                            CategoryId = 3,
                            DescriptionField1 = "Шкала рівня води\r\nЗі шкалою\r\nТип нагрівального елемента\r\nПрихований (диск)",
                            DescriptionField2 = "Тип\r\nМашина для заварювання",
                            ImageUrl = "https://content2.rozetka.com.ua/goods/images/big/13239860.jpg",
                            Name = "Машина для заварювання",
                            Price = 12285.0
                        },
                        new
                        {
                            Id = 7,
                            ActionPrice = 3999.0,
                            CategoryId = 3,
                            DescriptionField1 = "Тип нагрівального елемента\r\nПрихований (диск)",
                            DescriptionField2 = "Тип\r\nДиспенсер-нагрівач води",
                            ImageUrl = "Тип\r\nДиспенсер-нагрівач води",
                            Name = "Диспенсер-нагрівач води",
                            Price = 4900.0
                        });
                });

            modelBuilder.Entity("DAL_V2.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "SobakaBarabaka@gmail.com",
                            Login = "HorseInPalto",
                            Name = "Vlad",
                            Password = "qwerty"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Gyci2021@gmail.com",
                            Login = "Gyci",
                            Name = "Andrew",
                            Password = "ytrewq"
                        });
                });

            modelBuilder.Entity("DAL_V2.Entity.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Words");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Header = "iditional Info",
                            KeyWord = "Gadget"
                        },
                        new
                        {
                            Id = 2,
                            Header = "Model",
                            KeyWord = "6s"
                        },
                        new
                        {
                            Id = 3,
                            Header = "Model",
                            KeyWord = "Pro 13"
                        },
                        new
                        {
                            Id = 4,
                            Header = "Model",
                            KeyWord = "H 1.6"
                        },
                        new
                        {
                            Id = 5,
                            Header = "Model",
                            KeyWord = "1.8 tsi"
                        },
                        new
                        {
                            Id = 6,
                            Header = "Model",
                            KeyWord = "TWK3P420"
                        },
                        new
                        {
                            Id = 7,
                            Header = "name",
                            KeyWord = "HENDI"
                        },
                        new
                        {
                            Id = 8,
                            Header = "name",
                            KeyWord = "Profi Cook"
                        },
                        new
                        {
                            Id = 9,
                            Header = "Model",
                            KeyWord = "PC-HWS 1168"
                        },
                        new
                        {
                            Id = 10,
                            Header = "color",
                            KeyWord = "Color:Чорний"
                        });
                });

            modelBuilder.Entity("DAL_V2.Entity.Cart", b =>
                {
                    b.HasOne("DAL_V2.Entity.Product", "Product")
                        .WithMany("Cart")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL_V2.Entity.User", "User")
                        .WithMany("Cart")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL_V2.Entity.KeyParams", b =>
                {
                    b.HasOne("DAL_V2.Entity.Word", "KeyWords")
                        .WithMany("ProductLink")
                        .HasForeignKey("KeyWordsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL_V2.Entity.Product", "Product")
                        .WithMany("KeyWords")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KeyWords");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DAL_V2.Entity.Product", b =>
                {
                    b.HasOne("DAL_V2.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DAL_V2.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAL_V2.Entity.Product", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("KeyWords");
                });

            modelBuilder.Entity("DAL_V2.Entity.User", b =>
                {
                    b.Navigation("Cart");
                });

            modelBuilder.Entity("DAL_V2.Entity.Word", b =>
                {
                    b.Navigation("ProductLink");
                });
#pragma warning restore 612, 618
        }
    }
}
